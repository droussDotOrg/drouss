<?php

namespace Proxies\__CG__\DROUSS\BookBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Book extends \DROUSS\BookBundle\Entity\Book implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'id', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'title', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'online', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'subTitle', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'extract', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'blanketPath', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'status', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'forward', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'Author', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'category', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'subCategory', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'Format', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'Language', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'Month', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'Science');
        }

        return array('__isInitialized__', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'id', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'title', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'online', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'subTitle', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'extract', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'blanketPath', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'status', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'forward', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'Author', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'category', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'subCategory', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'Format', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'Language', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'Month', '' . "\0" . 'DROUSS\\BookBundle\\Entity\\Book' . "\0" . 'Science');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Book $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function setOnline($online)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOnline', array($online));

        return parent::setOnline($online);
    }

    /**
     * {@inheritDoc}
     */
    public function getOnline()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOnline', array());

        return parent::getOnline();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubTitle($subTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubTitle', array($subTitle));

        return parent::setSubTitle($subTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubTitle', array());

        return parent::getSubTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setExtract($extract)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtract', array($extract));

        return parent::setExtract($extract);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtract()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtract', array());

        return parent::getExtract();
    }

    /**
     * {@inheritDoc}
     */
    public function setBlanketPath($blanketPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlanketPath', array($blanketPath));

        return parent::setBlanketPath($blanketPath);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlanketPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlanketPath', array());

        return parent::getBlanketPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setForward($forward)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setForward', array($forward));

        return parent::setForward($forward);
    }

    /**
     * {@inheritDoc}
     */
    public function getForward()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForward', array());

        return parent::getForward();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoryId($categoryId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoryId', array($categoryId));

        return parent::setCategoryId($categoryId);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryId', array());

        return parent::getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor(\DROUSS\BookBundle\Entity\Author $author = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', array($author));

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', array());

        return parent::getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(\DROUSS\BookBundle\Entity\Category $category = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', array($category));

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', array());

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function addFormat(\DROUSS\BookBundle\Entity\Format $format)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFormat', array($format));

        return parent::addFormat($format);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFormat(\DROUSS\BookBundle\Entity\Format $format)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFormat', array($format));

        return parent::removeFormat($format);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormat', array());

        return parent::getFormat();
    }

    /**
     * {@inheritDoc}
     */
    public function addLanguage(\DROUSS\BookBundle\Entity\Language $language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLanguage', array($language));

        return parent::addLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLanguage(\DROUSS\BookBundle\Entity\Language $language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLanguage', array($language));

        return parent::removeLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', array());

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function addMonth(\DROUSS\BookBundle\Entity\Month $month)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMonth', array($month));

        return parent::addMonth($month);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMonth(\DROUSS\BookBundle\Entity\Month $month)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMonth', array($month));

        return parent::removeMonth($month);
    }

    /**
     * {@inheritDoc}
     */
    public function getMonth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMonth', array());

        return parent::getMonth();
    }

    /**
     * {@inheritDoc}
     */
    public function addScience(\DROUSS\BookBundle\Entity\Science $science)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addScience', array($science));

        return parent::addScience($science);
    }

    /**
     * {@inheritDoc}
     */
    public function removeScience(\DROUSS\BookBundle\Entity\Science $science)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeScience', array($science));

        return parent::removeScience($science);
    }

    /**
     * {@inheritDoc}
     */
    public function getScience()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScience', array());

        return parent::getScience();
    }

    /**
     * {@inheritDoc}
     */
    public function setBookFormatPath($format, $path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBookFormatPath', array($format, $path));

        return parent::setBookFormatPath($format, $path);
    }

    /**
     * {@inheritDoc}
     */
    public function getBookFormatPath($format)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBookFormatPath', array($format));

        return parent::getBookFormatPath($format);
    }

    /**
     * {@inheritDoc}
     */
    public function setSubCategory(\DROUSS\BookBundle\Entity\SubCategory $subCategory = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubCategory', array($subCategory));

        return parent::setSubCategory($subCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubCategory', array());

        return parent::getSubCategory();
    }

}
