<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appProdUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appProdUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'drouss_user_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'DROUSS\\UserBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_home_default' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/book',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_view' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::viewAction',  ),  2 =>   array (    'id' => '\\d{1,}',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/book',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_list' => array (  0 =>   array (    0 => 'category',  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    1 =>     array (      0 => 'text',      1 => '/book/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_list_publication' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::listpublicationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/book/category2/publication',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_quran' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::quranAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/book/category2/quran',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_list_author' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::listauthorAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/book/list/author',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_view_author' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::viewauthorAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/book/author',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_view_pub' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::viewpubAction',  ),  2 =>   array (    'name' => '.{0,}',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '.{0,}',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/book/pub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_search_science' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::searchscienceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/book/science',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_search_language' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::searchlanguageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/book/language',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_online_book' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::onlinebookAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/book/online',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_online_pub' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::onlinepubAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/pub/online',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_search' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/book/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_oumma' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::oummaAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/oumma',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_woman' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::womanAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/femmes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_womanus' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::womanusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/woman',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'book_faqf' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::faqfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/faq-femmes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_author' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\AuthorController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/author/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_author_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\AuthorController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/author',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_author_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\AuthorController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/author/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_author_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\AuthorController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/author/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_author_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\AuthorController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/author',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_author_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\AuthorController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/author',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_author_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\AuthorController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/author',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'drouss_mail' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DROUSS\\BookBundle\\Controller\\BookController::emailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
